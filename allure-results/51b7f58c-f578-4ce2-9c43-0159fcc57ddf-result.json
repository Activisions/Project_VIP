{"name": "test_full_booking_hotel", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=128.0.6613.120)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6D232B5D2+29090]\n\t(No symbol) [0x00007FF6D229E689]\n\t(No symbol) [0x00007FF6D215B1CA]\n\t(No symbol) [0x00007FF6D212FAF5]\n\t(No symbol) [0x00007FF6D21DE2E7]\n\t(No symbol) [0x00007FF6D21F5EE1]\n\t(No symbol) [0x00007FF6D21D6493]\n\t(No symbol) [0x00007FF6D21A09B1]\n\t(No symbol) [0x00007FF6D21A1B11]\n\tGetHandleVerifier [0x00007FF6D2648C5D+3295277]\n\tGetHandleVerifier [0x00007FF6D2694843+3605523]\n\tGetHandleVerifier [0x00007FF6D268A707+3564247]\n\tGetHandleVerifier [0x00007FF6D23E6EB6+797318]\n\t(No symbol) [0x00007FF6D22A980F]\n\t(No symbol) [0x00007FF6D22A53F4]\n\t(No symbol) [0x00007FF6D22A5580]\n\t(No symbol) [0x00007FF6D2294A1F]\n\tBaseThreadInitThunk [0x00007FF908DA7374+20]\n\tRtlUserThreadStart [0x00007FF90937CC91+33]", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d8661cefa8363eef7c3560084f6aa66c\")>\n\n    def test_full_booking_hotel(driver):\n>       driver.get(rooms_url)\n\nProject_DanHotel\\A_SITE\\test_site\\test_rooms.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:363: in get\n    self.execute(Command.GET, {\"url\": url})\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001BAD9BB1910>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...07FF6D2294A1F]\\\\n\\\\tBaseThreadInitThunk [0x00007FF908DA7374+20]\\\\n\\\\tRtlUserThreadStart [0x00007FF90937CC91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=128.0.6613.120)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6D232B5D2+29090]\nE       \t(No symbol) [0x00007FF6D229E689]\nE       \t(No symbol) [0x00007FF6D215B1CA]\nE       \t(No symbol) [0x00007FF6D212FAF5]\nE       \t(No symbol) [0x00007FF6D21DE2E7]\nE       \t(No symbol) [0x00007FF6D21F5EE1]\nE       \t(No symbol) [0x00007FF6D21D6493]\nE       \t(No symbol) [0x00007FF6D21A09B1]\nE       \t(No symbol) [0x00007FF6D21A1B11]\nE       \tGetHandleVerifier [0x00007FF6D2648C5D+3295277]\nE       \tGetHandleVerifier [0x00007FF6D2694843+3605523]\nE       \tGetHandleVerifier [0x00007FF6D268A707+3564247]\nE       \tGetHandleVerifier [0x00007FF6D23E6EB6+797318]\nE       \t(No symbol) [0x00007FF6D22A980F]\nE       \t(No symbol) [0x00007FF6D22A53F4]\nE       \t(No symbol) [0x00007FF6D22A5580]\nE       \t(No symbol) [0x00007FF6D2294A1F]\nE       \tBaseThreadInitThunk [0x00007FF908DA7374+20]\nE       \tRtlUserThreadStart [0x00007FF90937CC91+33]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchWindowException"}, "start": 1725975020751, "stop": 1725975020754, "uuid": "92f0bb57-3826-454e-94ab-8efee3ce39a4", "historyId": "810f2bc78fc9ef95d9519c3c82ef0368", "testCaseId": "810f2bc78fc9ef95d9519c3c82ef0368", "fullName": "Project_DanHotel.A_SITE.test_site.test_rooms#test_full_booking_hotel", "labels": [{"name": "parentSuite", "value": "Project_DanHotel.A_SITE.test_site"}, {"name": "suite", "value": "test_rooms"}, {"name": "host", "value": "lupa94"}, {"name": "thread", "value": "6380-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Project_DanHotel.A_SITE.test_site.test_rooms"}]}